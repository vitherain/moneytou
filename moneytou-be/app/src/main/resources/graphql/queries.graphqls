# java.util.Date implementation
scalar Date
# java.time.LocalDate implementation
scalar LocalDate
# java.time.LocalDateTime implementation
scalar LocalDateTime
# java.time.LocalTime implementation
scalar LocalTime
# java.time.OffsetDateTime implementation
scalar OffsetDateTime

type Account {
    id: ID
    name: String!
}

enum Currency {
    CZK
    EUR
    USD
}

type Money {
    value: Float!
    currency: Currency!
}

type Label {
    name: String!
}

type TransactionCategory {
    id: ID
    name: String!
    icon: String!
    childCategories: [TransactionCategory]!
}

interface Transaction {
    id: ID
    amount: Money!
    date: OffsetDateTime!
    category: TransactionCategory!
    labels: [Label]!
    account: Account!
    note: String
}

type Expense implements Transaction {
    id: ID
    amount: Money!
    date: OffsetDateTime!
    category: TransactionCategory!
    labels: [Label]!
    account: Account!
    note: String
}

type Income implements Transaction {
    id: ID
    amount: Money!
    date: OffsetDateTime!
    category: TransactionCategory!
    labels: [Label]!
    account: Account!
    note: String
}

type Post {
    id: ID!
    title: String!
    text: String!
    category: String
    author: Author
}

type Author {
    id: ID!
    name: String!
    thumbnail: String
    posts: [Post]!
}

# The Root Query for the application
type Query {
    recentPosts(count: Int, offset: Int): [Post]!
}

# The Root Mutation for the application
type Mutation {
    writePost(title: String!, text: String!, category: String, author: String!) : Post!
}
